	17 Ene:
		+ EGCryptoSystem and EGStub save to/load from file
		+ plonevote.gen_cryptosys tool
	18 Ene:
		+ PrivateKey, PublicKey, KeyPair : generation
		+ encrypt/decrypt bitstream/strings
	19 Ene:
		+ save/load keys
		+ armored encrypted text format
		+ plonevote.gen_keys
		- plonevote.encrypt
		- plonevote.decrypt
		- milestones Sergio
	21 Ene:
		- threshold encryption
	22 Ene:
		- Begin (module) documentation/test work
		
	Next week:
		- mixnets
		- proof of shuffling
		- verifiable decryption
		
POSSIBLE WEAKNESS:
	- Encryption pads the last block with 0's, should be changed to random data

Early optimization is the O(sqrt(n)*lg^2(n)) of all evil...


from utilities.BitStream import BitStream as BS
bs = BS()

s = ""
for i in range(0,100):
	s += "DEADBEEF"

num = int(s, 16)
bit_length = 4*8*100
bs.put_num(num, bit_length)

print [hex(c)[2:-1] for c in bs._cells]
